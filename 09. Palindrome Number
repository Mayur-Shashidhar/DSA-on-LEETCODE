QUESTION:
Given an integer x, return true if x is a palindrome, and false otherwise.



APPROACH:
1.If x < 0 or (x % 10 == 0 and x != 0) → return false.
2.Reverse the last half of the number:
    Pop the last digit from x
    Push it into reversedHalf
    Stop when x <= reversedHalf.
3.At the end:
    If total digits are even → x == reversedHalf
    If total digits are odd → x == reversedHalf / 10 (middle digit ignored)




CODE:
#include <stdio.h>
#include <stdbool.h>

bool isPalindrome(int x) {
    
    if (x < 0 || (x % 10 == 0 && x != 0))
        return false;

    int reversedHalf = 0;
    while (x > reversedHalf) {
        reversedHalf = reversedHalf * 10 + x % 10;
        x /= 10;
    }

    
    return (x == reversedHalf) || (x == reversedHalf / 10);
}
