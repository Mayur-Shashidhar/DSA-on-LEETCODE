QUESTION:
Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.



APPROACH:
Naive Search (Simple, O(n·m))
We can simply check every possible starting position in haystack until:
  The remaining characters are fewer than needle length → stop.
  Compare the substring with needle.
If they match → return index.
If no match found → return -1.



CODE:
#include <string.h>

int strStr(char * haystack, char * needle) {
    int n = strlen(haystack);
    int m = strlen(needle);

    if (m == 0) return 0; 
    for (int i = 0; i <= n - m; i++) {
        int j = 0;
        while (j < m && haystack[i + j] == needle[j]) {
            j++;
        }
        if (j == m) return i; 
    }
    return -1; 
}
